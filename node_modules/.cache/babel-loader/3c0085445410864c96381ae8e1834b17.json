{"ast":null,"code":"import _slicedToArray from \"/home/rajesh/seasons/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rajesh/seasons/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nconst App = () => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        lat = _useState2[0],\n        setLat = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errorMessage = _useState4[0],\n        setErrorMessage = _useState4[1];\n\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition(position => setLat(position.coords.latitude), err => setErrorMessage(err.message));\n  }, []);\n  let content;\n\n  if (errorMessage) {\n    content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, errorMessage);\n  } else if (lat) {\n    content = React.createElement(SeasonDisplay, {\n      lat: lat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  } else {\n    content = React.createElement(Spinner, {\n      message: \"Please accept location request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"border red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, content);\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/home/rajesh/seasons/src/index.js"],"names":["React","useState","useEffect","ReactDOM","SeasonDisplay","Spinner","App","lat","setLat","errorMessage","setErrorMessage","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","err","message","content","render","document","querySelector"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBAEML,QAAQ,CAAC,IAAD,CAFd;AAAA;AAAA,QAETM,GAFS;AAAA,QAEJC,MAFI;;AAAA,qBAGwBP,QAAQ,CAAC,EAAD,CAHhC;AAAA;AAAA,QAGTQ,YAHS;AAAA,QAGKC,eAHL;;AAKhBR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACEC,QAAQ,IAAIP,MAAM,CAACO,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CADpB,EAEEC,GAAG,IAAIR,eAAe,CAACQ,GAAG,CAACC,OAAL,CAFxB;AAMD,GAPQ,EAON,EAPM,CAAT;AAWA,MAAIC,OAAJ;;AACA,MAAIX,YAAJ,EAAkB;AAEhBW,IAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMX,YAAN,CAAV;AACD,GAHD,MAGO,IAAIF,GAAJ,EAAS;AAEda,IAAAA,OAAO,GAAG,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEb,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD,GAHM,MAGA;AAELa,IAAAA,OAAO,GAAG,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AAED;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,CADF;AAQD,CArCD;;AAwCAjB,QAAQ,CAACkB,MAAT,CACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFF","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nconst App = () => {\n\n  const [lat, setLat] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition(\n      position => setLat(position.coords.latitude),\n      err => setErrorMessage(err.message)\n\n    );\n\n  }, []);\n\n\n\n  let content;\n  if (errorMessage) {\n\n    content = <div>{errorMessage}</div>\n  } else if (lat) {\n\n    content = <SeasonDisplay lat={lat} />\n  } else {\n\n    content = <Spinner message=\"Please accept location request\" />\n\n  }\n\n  return (\n    <div className=\"border red\">\n      {content}\n    </div>\n  );\n\n\n\n};\n\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n)"]},"metadata":{},"sourceType":"module"}