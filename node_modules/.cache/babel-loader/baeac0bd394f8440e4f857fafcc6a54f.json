{"ast":null,"code":"import _slicedToArray from \"/home/rajesh/seasons/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rajesh/seasons/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\nimport useLocation from './useLocation';\n\nconst App = () => {\n  const _useLocation = useLocation(),\n        _useLocation2 = _slicedToArray(_useLocation, 2),\n        lat = _useLocation2[0],\n        errorMessage = _useLocation2[1];\n\n  let content;\n\n  if (errorMessage) {\n    content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, errorMessage);\n  } else if (lat) {\n    content = React.createElement(SeasonDisplay, {\n      lat: lat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  } else {\n    content = React.createElement(Spinner, {\n      message: \"Please accept location request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"border red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, content);\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/home/rajesh/seasons/src/index.js"],"names":["React","useState","useEffect","ReactDOM","SeasonDisplay","Spinner","useLocation","App","lat","errorMessage","content","render","document","querySelector"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,uBAEYD,WAAW,EAFvB;AAAA;AAAA,QAETE,GAFS;AAAA,QAEJC,YAFI;;AAIhB,MAAIC,OAAJ;;AACA,MAAID,YAAJ,EAAkB;AAEhBC,IAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,YAAN,CAAV;AACD,GAHD,MAGO,IAAID,GAAJ,EAAS;AAEdE,IAAAA,OAAO,GAAG,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEF,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD,GAHM,MAGA;AAELE,IAAAA,OAAO,GAAG,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AAED;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,CADF;AAQD,CAzBD;;AA4BAP,QAAQ,CAACQ,MAAT,CACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFF","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\nimport useLocation from './useLocation';\n\nconst App = () => {\n\n  const [lat, errorMessage] = useLocation();\n\n  let content;\n  if (errorMessage) {\n\n    content = <div>{errorMessage}</div>\n  } else if (lat) {\n\n    content = <SeasonDisplay lat={lat} />\n  } else {\n\n    content = <Spinner message=\"Please accept location request\" />\n\n  }\n\n  return (\n    <div className=\"border red\">\n      {content}\n    </div>\n  );\n\n\n\n};\n\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n)"]},"metadata":{},"sourceType":"module"}